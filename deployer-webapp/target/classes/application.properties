# 서버 포트 (WAS포트 8081~8085)
server.port=8083
# 실행 모드 runMode1-->dev,test,product,service    runMode2-->manager,transaver,log    runMode3-->>inswave,shinhanbankatop,shinhanbanknext
runMode1=dev
runMode2=manager
runMode3=inswave
# db Config에서 읽은 값 설정 시간 10분 마다
configInitialServiceSleepTime=600000
# 국가 설정
country=korea
# log level
logging.level.root=info
server.resource.log=false
# DB 접속 정보 (jndi로 수정)
spring.datasource.wedgemanager.jdbcUrl=jdbc:oracle:thin:@localhost:1521:orcl
spring.datasource.wedgemanager.username=test1
spring.datasource.wedgemanager.password=test1
spring.datasource.wedgemanager.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.wedgemanager.jndi-name=jdbc/wedgemanager
#spring.datasource.external1.jdbcUrl=jdbc:oracle:thin:@localhost:1521:orcl
#spring.datasource.external1.username=test1
#spring.datasource.external1.password=test1
#spring.datasource.external1.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.wedgemanager.jndi-name=jdbc/wedgemanager
#JPA 설정
#Dialect 설정
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect
#하이버네이트가 실행하는 모든 SQL문을 콘솔로 출력해 준다.
spring.jpa.properties.hibernate.show_sql=false
#콘솔에 출력되는 JPA 실행 쿼리를 가독성있게 표현한다.
spring.jpa.properties.hibernate.format_sql=false
#디버깅이 용이하도록 SQL문 이외에 추가적인 정보를 출력해 준다.
spring.jpa.properties.hibernate.use_sql_comments=false
# ddl-auto - @Entity 테이블 정보를 실제 DB에 반영 할건지 설정(create/update/none..)
spring.jpa.properties.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.physical_naming_strategy=com.inswave.appplatform.strategy.CustomNamingStrategy
spring.jpa.properties.hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_size=500
# 에러페이지
#server.error.whitelabel.enabled=false
# .html suffix 설정
#spring.mvc.view.suffix=.html
# - jsp 페이지를 처리하기 위한 prefix와 suffix를 application.properties에 추가 하자.
# - 앞서 생성한 JSP 경로를 prefix로 선언, 그리고 확장자를 suffix로 선언할 수 있다.
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
# jsp 기존 스프링과 동일하게 자동 반영하기 위해 설정을 추가
devtools.livereload.enabled=true
server.jsp-servlet.init-parameters.development=true
#오류 응답에 exception의 내용을 포함할지 여부 (TRUE, FALSE)
server.error.include-exception=TRUE
#오류 응답에 stacktrace 내용을 포함할지 여부 (ALWAYS, NEVER, ON_TRACE_PARAM)
server.error.include-stacktrace=ALWAYS
server.error.path=TRUE
#브라우저 요청에 대해 서버 오류시 기본으로 노출할 페이지를 사용할지 여부 (TRUE, FALSE)
server.error.whitelabel.enabled=TRUE
#JSP와 같이 사용할 경우 뷰 구분을 위해 컨트롤러가 뷰 이름을 반환할때 thymeleaf/ 로 시작하면 타임리프로 처리하도록 view-names 지정
spring.thymeleaf.view-names=thymeleaf/*
spring.thymeleaf.prefix=classpath:templates/
spring.thymeleaf.suffix=.html
# thymeleaf를 사용하다 수정 사항이 생길 때 수정을 하면 재시작을 해줘야 한다. 이를 무시하고 브라우저 새로고침시 수정사항 반영을 취해 cache=false 설정(운영시는 true)
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
## websocket
whub.container.bufferSize.max.text=1048576
whub.container.bufferSize.max.binary=1048576
whub.container.timeout.maxSessionIdle=43200000
whub.container.timeout.asyncSend=60000
#policies
whub.policies.interval=1000
whub.policies.gatherThreshold.interval=10
whub.policies.gatherThreshold.intervalType=periodSS
whub.policies.sendOption.interval=1000
whub.policies.hardwareError.interval=0
whub.policies.deviceDriverError.interval=0
whub.policies.blueScreen.interval=0
whub.policies.applicationError.interval=0
whub.policies.collectLog.interval=0
whub.policies.type=periodSS
#intergrity
whub.intergrity.ini.wait=true
whub.intergrity.file.exist.wait=true
whub.intergrity.file.crc.wait=true
whub.intergrity.process.wait=true
whub.intergrity.reg.wait=true
#대용량배포 설정
wdeployer.repo.path=/home/ec2-user/ingyu/webapps/admin-deployer/upload/bigfile
wdeployer.multicast.ip=232.1.5.1
wdeployer.multicast.port=27016
wdeployer.multicast.client-properites={\
  stateInterval:300000,\
  stateIntervalWidth:180000,\
  missingFileRepeatInterval:60000,\
  multicastIp:'${wdeployer.multicast.ip}',\
  multicastPort:${wdeployer.multicast.port}\
  }

wedgemanager.upload.path=/home/ec2-user/ingyu/webapps/admin-deployer/upload
wedgemanager.upload.allowedExtensions=
wedgemanager.upload.deniedExtensions=
# 1GB = 1073741824, 20GB = 21474836480
wedgemanager.upload.maxSize=21474836480
spring.servlet.multipart.maxFileSize=${wedgemanager.upload.maxSize}
spring.servlet.multipart.maxRequestSize=${wedgemanager.upload.maxSize}