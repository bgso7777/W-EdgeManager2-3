-- create user wedgemanager identified by wedgemanager;
-- grant connect, resource, dba to wedgemanager;


CREATE TABLE admin_user
(
    ADMIN_USER_ID        NUMBER(19)     NOT NULL,
    SITE_ID              NUMBER(19)     NOT NULL,
    ROLE_ID              NUMBER(19)     NOT NULL,
    COUNTRY_ID           NUMBER(19)     NOT NULL,
    LOGIN_ID             NVARCHAR2(255) NULL,
    PASSWORD             NVARCHAR2(255) NULL,
    IS_FIRST_PASSWORD    NUMBER(1)      NULL,
    NAME                 NVARCHAR2(255) NULL,
    USERNAME             NVARCHAR2(255) NULL,
    EMAIL                NVARCHAR2(255) NULL,
    PHONE                NVARCHAR2(255) NULL,
    CONNECT_IPS          NVARCHAR2(255) NULL,
    COUNT_WRONG_PASSWORD NUMBER(11)     NULL,
    PASSWORD_DUE_DATE    TIMESTAMP      NULL,
    UPDATE_DATE          TIMESTAMP      NULL,
    LOGIN_FAIL_LOCK_DATE TIMESTAMP      NULL,
    LOGIN_DATE           TIMESTAMP      NULL,
    REGISTRATION_DATE    TIMESTAMP      NULL,
    AUTH_TOKEN           CLOB           NULL,
    CONSTRAINT ADMIN_USER_PK PRIMARY KEY (ADMIN_USER_ID)
);

CREATE TABLE config
(
    CONFIG_ID         NUMBER(19)      NOT NULL,
    KEY_              NVARCHAR2(255)  NULL,
    VALUE             NVARCHAR2(255)  NULL,
    VALUE2            NVARCHAR2(2000) NULL,
    DESCRIPTION       NVARCHAR2(255)  NULL,
    REGISTRATION_DATE TIMESTAMP       NULL,
    CONSTRAINT CONFIG_PK PRIMARY KEY (CONFIG_ID)
);
CREATE UNIQUE INDEX CONFIG_IDX_01 ON CONFIG (KEY_);


CREATE TABLE config_log
(
    CONFIG_ID         NUMBER(19)            NOT NULL,
    KEY_              NVARCHAR2(255)        NULL,
    VALUE             NVARCHAR2(255)        NULL,
    VALUE2            NVARCHAR2(255)        NULL,
    LOG_SAVED_DAY     NUMBER(11) DEFAULT -1 NOT NULL,
    DESCRIPTION       NVARCHAR2(255)        NULL,
    REGISTRATION_DATE TIMESTAMP             NULL,
    CONSTRAINT CONFIG_LOG_PK PRIMARY KEY (CONFIG_ID)
);

CREATE TABLE config_manager
(
    CONFIG_ID         NUMBER(19)     NOT NULL,
    KEY_              NVARCHAR2(255) NULL,
    VALUE             NVARCHAR2(255) NULL,
    VALUE2            NVARCHAR2(255) NULL,
    DESCRIPTION       NVARCHAR2(255) NULL,
    REGISTRATION_DATE TIMESTAMP      NULL,
    CONSTRAINT CONFIG_MANAGER_PK PRIMARY KEY (CONFIG_ID)
);
CREATE UNIQUE INDEX CONFIG_MANAGER_IDX_01 ON CONFIG_MANAGER (KEY_);

CREATE TABLE country
(
    COUNTRY_ID   NUMBER(11)    NOT NULL,
    NAME         NVARCHAR2(45) NOT NULL,
    DISPLAY_NAME NVARCHAR2(45) NOT NULL,
    DESCRIPTION  NVARCHAR2(50) NULL,
    CONSTRAINT COUNTRY_PK PRIMARY KEY (COUNTRY_ID)
);

CREATE TABLE em_conditions
(
    CONDITIONID NVARCHAR2(100) NOT NULL,
    ID          NVARCHAR2(100) NULL,
    LEVEL_      NVARCHAR2(45)  NULL,
    CHANNEL     NVARCHAR2(212) NULL,
    DATE_       NVARCHAR2(45)  NULL,
    PROVIDER    NVARCHAR2(212) NULL,
    CONSTRAINT EM_CONDITIONS_PK PRIMARY KEY (CONDITIONID)
);

CREATE TABLE em_conditions_group
(
    ID           NVARCHAR2(100) NOT NULL,
    CONDITIONSID NVARCHAR2(100) NOT NULL,
    CONSTRAINT EM_CONDITIONS_GROUP_PK PRIMARY KEY (ID, CONDITIONSID)
);

CREATE TABLE em_constraint
(
    ID                NVARCHAR2(45) NOT NULL,
    DELAYMILLIS       NVARCHAR2(45) NULL,
    LIMITROW          NVARCHAR2(45) NULL,
    INVOKEBYCONDITION NVARCHAR2(45) NULL,
    CONSTRAINT EM_CONSTRAINT_PK PRIMARY KEY (ID)
);

CREATE TABLE em_department
(
    DEPARTCODE  NVARCHAR2(30) NOT NULL,
    DEPARTNAME  NVARCHAR2(50) NOT NULL,
    DEPARTLEVEL NUMBER(11)    NOT NULL,
    UPPERCODE   NVARCHAR2(30) NOT NULL,
    CREATEDATE  TIMESTAMP     NULL,
    UPDATEDATE  TIMESTAMP     NULL,
    CONSTRAINT EM_DEPARTMENT_PK PRIMARY KEY (DEPARTCODE)
);

CREATE TABLE em_detectstate
(
    DETECTSTATEID NVARCHAR2(100) NOT NULL,
    COMPARETYPE   NVARCHAR2(45)  NULL,
    COMPAREOPER   NVARCHAR2(45)  NULL,
    COMPAREVALUE  NVARCHAR2(45)  NULL,
    CONSTRAINT EM_DETECTSTATE_PK PRIMARY KEY (DETECTSTATEID)
);

CREATE TABLE em_detectstate_group
(
    ID            NVARCHAR2(100) NOT NULL,
    DETECTSTATEID NVARCHAR2(100) NOT NULL,
    CONSTRAINT EM_DETECTSTATE_GROUP_PK PRIMARY KEY (ID, DETECTSTATEID)
);

CREATE TABLE em_devices
(
    ID               NVARCHAR2(100) NOT NULL,
    APPID            NVARCHAR2(50)  NOT NULL,
    OSTYPE           NVARCHAR2(15)  NOT NULL,
    IP               NVARCHAR2(20)  NULL,
    USERID           NVARCHAR2(30)  NULL,
    SESSIONSTATE     NUMBER(11)     NULL,
    UPDATEVERSION    NVARCHAR2(45)  NULL,
    UPDATESTATE      NVARCHAR2(45)  NULL,
    UPDATESCOPE      NVARCHAR2(1)   NULL,
    UPDATEUPDATEDATE TIMESTAMP      NULL,
    DISTVERSION      NVARCHAR2(45)  NULL,
    DISTSCOPE        NVARCHAR2(45)  NULL,
    DISTSTATE        NVARCHAR2(1)   NULL,
    DISTUPDATEDATE   TIMESTAMP      NULL,
    STATE            NVARCHAR2(45)  NULL,
    CREATEDATE       TIMESTAMP      NULL,
    UPDATEDATE       TIMESTAMP      NULL,
    LASTDATE         TIMESTAMP      NULL,
    DEPARTCODE       NVARCHAR2(30)  NULL,
    STATEMSG         NVARCHAR2(512) NULL,
    CONSTRAINT EM_DEVICES_PK PRIMARY KEY (ID, APPID)
);

CREATE TABLE em_devicestate
(
    DEVICEID     NVARCHAR2(30) NOT NULL,
    APPID        NVARCHAR2(50) NOT NULL,
    USERID       NVARCHAR2(30) NOT NULL,
    SESSIONSTATE NUMBER(11)    NULL,
    CONSTRAINT EM_DEVICESTATE_PK PRIMARY KEY (DEVICEID, APPID, USERID)
);

create table em_dists_departments
(
    APPID      NVARCHAR2(50) not null,
    VERSION    NVARCHAR2(50) not null,
    TARGET     NVARCHAR2(30) not null,
    CREATEDATE TIMESTAMP     null,
    UPDATEDATE TIMESTAMP     null,
    type       NVARCHAR2(10) null,
    CONSTRAINT EM_DISTS_DEPARTMENTS_PK PRIMARY KEY (APPID, VERSION, TARGET)
);

CREATE TABLE em_dists_files
(
    APPID      NVARCHAR2(50)            NOT NULL,
    VERSION    NVARCHAR2(50)            NOT NULL,
    PATH       NVARCHAR2(500)           NOT NULL,
    COMPAREKEY NVARCHAR2(64)            NOT NULL,
    RULEINDEX  NVARCHAR2(45) DEFAULT '' NULL,
    STATE      NVARCHAR2(2)  DEFAULT '' NULL,
    REEXECUTE  NVARCHAR2(10)            NULL,
    CONSTRAINT EM_DISTS_FILES_PK PRIMARY KEY (APPID, VERSION, PATH)
);

CREATE TABLE em_dists_files_info
(
    APPID            NVARCHAR2(50)  NOT NULL,
    PATH             NVARCHAR2(500) NOT NULL,
    DEVICECODE       NVARCHAR2(20)  NULL,
    DESTPATH         NVARCHAR2(500) NULL,
    TYPE             NVARCHAR2(15)  NULL,
    ORDEROFEXECUTION NUMBER(11)     NULL,
    CONSTRAINT EM_DISTS_FILES_INFO_PK PRIMARY KEY (APPID, PATH)
);

CREATE TABLE em_gatherthresthold
(
    ID           NVARCHAR2(100) NOT NULL,
    CPUUASGE     NVARCHAR2(45)  NULL,
    DISKUSAGE    NVARCHAR2(45)  NULL,
    MEMORYUSAGE  NVARCHAR2(45)  NULL,
    INTERVALTYPE NVARCHAR2(45)  NULL,
    "_INTERVAL"  NVARCHAR2(45)  NULL,
    CONSTRAINT EM_GATHERTHRESTHOLD_PK PRIMARY KEY (ID)
);

CREATE TABLE em_group
(
    ID            NVARCHAR2(30) NOT NULL,
    POLICYGROUPID NUMBER(11)    NULL,
    TYPE          NVARCHAR2(45) NULL,
    TYPEVALUE     NVARCHAR2(45) NULL,
    CONSTRAINT EM_GROUP_PK PRIMARY KEY (ID)
);

CREATE TABLE em_group_department
(
    ID     NVARCHAR2(30) NOT NULL,
    TARGET NVARCHAR2(30) NOT NULL,
    CONSTRAINT EM_GROUP_DEPARTMENT_PK PRIMARY KEY (ID, TARGET)
);

CREATE TABLE em_integrity
(
    ID                NVARCHAR2(45) NOT NULL,
    INTEGRITYPOLICYID NVARCHAR2(45) NOT NULL,
    URL               NVARCHAR2(45) NULL,
    CONSTRAINT EM_INTEGRITY_PK PRIMARY KEY (ID)
);

CREATE TABLE em_integrity_policy
(
    ID          NVARCHAR2(45)               NOT NULL,
    FAULTREG    NVARCHAR2(10)               NULL,
    REMOTECODE  NVARCHAR2(30)               NULL,
    ISALWAYS    NVARCHAR2(45)               NULL,
    STARTTIME   TIMESTAMP                   NULL,
    ENDTIME     TIMESTAMP                   NULL,
    PCTYPE      NVARCHAR2(50) DEFAULT 'ETC' NULL,
    DESCRIPTION NVARCHAR2(50) DEFAULT ''    NULL,
    SENDERRCNT  NUMBER(3)     DEFAULT 10    NULL,
    CONSTRAINT EM_INTEGRITY_POLICY_PK PRIMARY KEY (ID)
);

CREATE TABLE em_integrity_role
(
    "_INDEX"          NVARCHAR2(45)  NOT NULL,
    INTEGRITYPOLICYID NVARCHAR2(45)  NOT NULL,
    TYPE              NVARCHAR2(45)  NULL,
    PARAMETER         NVARCHAR2(512) NULL,
    SCRIPT            NVARCHAR2(512) NULL,
    WAIT              NVARCHAR2(45)  NULL,
    NAME              NVARCHAR2(50)  NULL,
    CONSTRAINT EM_INTEGRITY_ROLE_PK PRIMARY KEY ("_INDEX")
);

CREATE TABLE em_organizations
(
    ID        NUMBER(11) NOT NULL,
    ORG       CLOB       NULL,
    CREATEDAT TIMESTAMP  NULL,
    UPDATEDAT TIMESTAMP  NULL,
    CONSTRAINT EM_ORGANIZATIONS_PK PRIMARY KEY (ID)
);

INSERT INTO em_organizations (ID, ORG, CREATEDAT, UPDATEDAT) VALUES
(0, '{"dlt_orgList":[{"ORGCD":"000000","LEVEL":1,"ORGNM":"전체","TYPE":"D","UPPERCD":"root"}]}', SYSDATE, null);


CREATE TABLE em_policy_group
(
    APPID      NVARCHAR2(50)            NOT NULL,
    ID         NVARCHAR2(100)           NOT NULL,
    TARGET     NVARCHAR2(30)            NOT NULL,
    TYPE       NVARCHAR2(45)            NOT NULL,
    IDTYPE     NVARCHAR2(45)            NOT NULL,
    CREATETIME TIMESTAMP                NULL,
    UPDATETIME TIMESTAMP                NULL,
    VERSION    NVARCHAR2(50) DEFAULT '' NULL,
    CONSTRAINT EM_POLICY_GROUP_PK PRIMARY KEY (APPID, ID, TARGET, TYPE, IDTYPE)
);

CREATE TABLE em_sendoption
(
    ID              NVARCHAR2(100) NOT NULL,
    SENTTOCOLLECTOR NVARCHAR2(45)  NULL,
    INTERVALTYPE    NVARCHAR2(45)  NULL,
    "_INTERVAL"     NVARCHAR2(45)  NULL,
    MAXROW          NVARCHAR2(45)  NULL,
    CONSTRAINT EM_SENDOPTION_PK PRIMARY KEY (ID)
);

CREATE TABLE em_seq_generator
(
    SEQUENCE_NAME NVARCHAR2(255) NOT NULL,
    NEXT_VAL      NUMBER(19)     NULL,
    CONSTRAINT EM_SEQ_GENERATOR_PK PRIMARY KEY (SEQUENCE_NAME)
);

CREATE TABLE em_specialcolumns
(
    ID              NVARCHAR2(100) NOT NULL,
    NAME            NVARCHAR2(100) NOT NULL,
    REFERENCECOLUMN NVARCHAR2(100) NOT NULL,
    REGEXPR         NVARCHAR2(100) NOT NULL,
    REFERENCESOURCE NVARCHAR2(100) NOT NULL,
    EVENTDATANAME   NVARCHAR2(100) NOT NULL,
    CONSTRAINT EM_SPECIALCOLUMNS_PK PRIMARY KEY (ID)
);

CREATE TABLE em_specialcolumns_group
(
    ID              NVARCHAR2(100) NOT NULL,
    SPEIALCOLUMNSID NVARCHAR2(100) NOT NULL,
    CONSTRAINT EM_SPECIALCOLUMNS_GROUP_PK PRIMARY KEY (ID, SPEIALCOLUMNSID)
);

CREATE TABLE em_users
(
    ID                   NVARCHAR2(30)  NOT NULL,
    NAME                 NVARCHAR2(45)  NULL,
    DUTY                 NVARCHAR2(45)  NULL,
    POSITION             NVARCHAR2(45)  NULL,
    REGDATE              TIMESTAMP      NULL,
    APPLYDATE            TIMESTAMP      NULL,
    VALID                NVARCHAR2(45)  NULL,
    CREATEDATE           TIMESTAMP      NULL,
    UPDATEDATE           TIMESTAMP      NULL,
    DEPARTCODE           NVARCHAR2(30)  NULL,
    PWD                  NVARCHAR2(256) NULL,
    EMAIL                NVARCHAR2(128) NULL,
    PHONE_NO             NVARCHAR2(64)  NULL,
    LAST_LOGIN_DATE      TIMESTAMP      NULL,
    LAST_LOGIN_PING_DATE TIMESTAMP      NULL,
    LAST_LOGOUT_DATE     TIMESTAMP      NULL,
    CONSTRAINT EM_USERS_PK PRIMARY KEY (ID)
);

CREATE TABLE file_attachement
(
    ID               NUMBER(19)     NOT NULL,
    ORG_FILE_NAME    NVARCHAR2(256) NOT NULL,
    FILE_TYPE        NVARCHAR2(3)   NOT NULL,
    FILE_SIZE        NUMBER(19)     NULL,
    SAVE_PATH        NVARCHAR2(512) NULL,
    CREATE_DATE      TIMESTAMP      NOT NULL,
    CREATE_USER_ID   NVARCHAR2(30)  NULL,
    CREATE_USER_NAME NVARCHAR2(45)  NULL,
    UPDATE_DATE      TIMESTAMP      NULL,
    UPDATE_USER_ID   NVARCHAR2(30)  NULL,
    UPDATE_USER_NAME NVARCHAR2(45)  NULL,
    CONSTRAINT FILE_ATTACHEMENT_PK PRIMARY KEY (ID)
);

CREATE TABLE file_attachement_map
(
    ID               NUMBER(19)    NOT NULL,
    SOURCE_TYPE      NVARCHAR2(64) NOT NULL,
    SOURCE_CODE      NVARCHAR2(64) NOT NULL,
    FILE_ID          NUMBER(19)    NOT NULL,
    CREATE_DATE      TIMESTAMP     NOT NULL,
    CREATE_USER_ID   NVARCHAR2(30) NULL,
    CREATE_USER_NAME NVARCHAR2(45) NULL,
    UPDATE_DATE      TIMESTAMP     NULL,
    UPDATE_USER_ID   NVARCHAR2(30) NULL,
    UPDATE_USER_NAME NVARCHAR2(45) NULL,
    CONSTRAINT FILE_ATTACHEMENT_MAP_PK PRIMARY KEY (ID)
);

ALTER TABLE FILE_ATTACHEMENT_MAP
    ADD CONSTRAINT FILE_ATTACHEMENT_MAP_IDX_01 FOREIGN KEY (FILE_ID) REFERENCES FILE_ATTACHEMENT (ID);

CREATE INDEX FILE_ATTACHEMENT_MAP_INDEX1 ON FILE_ATTACHEMENT_MAP (SOURCE_TYPE, SOURCE_CODE, FILE_ID);
CREATE INDEX FK_FILE_ATTACHEMENT_MAP_FILE_ATTACHEMENT1_IDX ON FILE_ATTACHEMENT_MAP (FILE_ID);

CREATE TABLE language
(
    LANGUAGE_ID       NUMBER(19)     NOT NULL,
    COUNTRY_ID        NUMBER(19)     NOT NULL,
    TYPE              NVARCHAR2(255) NULL,
    KEY_              NVARCHAR2(255) NULL,
    VALUE             NVARCHAR2(255) NULL,
    UPDATE_DATE       TIMESTAMP      NULL,
    REGISTRATION_DATE TIMESTAMP      NULL,
    CONSTRAINT LANGUAGE_PK PRIMARY KEY (LANGUAGE_ID)
);

CREATE TABLE license
(
    LICENSE_ID  NUMBER(11)    NOT NULL,
    NAME        NVARCHAR2(45) NOT NULL,
    DESCRIPTION NVARCHAR2(50) NULL,
    CONSTRAINT LICENSE_PK PRIMARY KEY (LICENSE_ID)
);

CREATE TABLE menu
(
    MENU_ID           NUMBER(19),
    ACTIVE            NUMBER(1)      NULL,
    PARENT_MENU_ID    NUMBER(19)     NULL,
    LEVEL_            NUMBER(11)     NULL,
    NAME              NVARCHAR2(20)  NOT NULL,
    PATH              NVARCHAR2(100) NULL,
    DESCRIPTION       NVARCHAR2(20)  NOT NULL,
    REGISTRATION_DATE TIMESTAMP      NULL,
    ICON_IMAGE        NVARCHAR2(200) NULL,
    CONSTRAINT MENU_PK PRIMARY KEY (MENU_ID)
);

CREATE TABLE menu_role
(
    MENU_ROLE_ID      NUMBER(19),
    MENU_ID           NUMBER(19) NULL,
    ROLE_ID           NUMBER(19) NULL,
    ACTIVE            NUMBER(1)  NULL,
    UPDATE_DATE       TIMESTAMP  NULL,
    REGISTRATION_DATE TIMESTAMP  NULL,
    CONSTRAINT MENU_ROLE_PK PRIMARY KEY (MENU_ROLE_ID)
);

CREATE TABLE role
(
    ROLE_ID     NUMBER(11)    NOT NULL,
    NAME        NVARCHAR2(45) NOT NULL,
    DESCRIPTION NVARCHAR2(50) NULL,
    CONSTRAINT ROLE_PK PRIMARY KEY (ROLE_ID)
);

CREATE TABLE rule
(
    RULE_ID             NUMBER(19),
    ACTIVE              NUMBER(1)       NULL,
    IS_SYSTEM           NUMBER(1)       NULL,
    NAME                NVARCHAR2(1024) NOT NULL,
    DESCRIPTION         NVARCHAR2(1024) NULL,
    RULE_LEVEL_ID       NUMBER(19)      NULL,
    RULE_RECEIVER_ID1   NUMBER(19)      NULL,
    RULE_RECEIVER_ID2   NUMBER(19)      NULL,
    RULE_RECEIVER_ID3   NUMBER(19)      NULL,
    PATTERN             NVARCHAR2(2000) NULL,
    CLASS_NAMES         NVARCHAR2(1024) NULL,
    DISPLAY_CLASS_NAMES NVARCHAR2(1024) NULL,
    FIELD_NAMES         NVARCHAR2(1024) NULL,
    DISPLAY_FIELD_NAMES NVARCHAR2(1024) NULL,
    UPDATE_DATE         TIMESTAMP       NULL,
    REGISTRATION_DATE   TIMESTAMP       NULL,
    CONSTRAINT RULE_PK PRIMARY KEY (RULE_ID)
);

CREATE TABLE rule_level
(
    RULE_LEVEL_ID NUMBER(11),
    NAME          NVARCHAR2(45) NOT NULL,
    DESCRIPTION   NVARCHAR2(50) NULL,
    CONSTRAINT RULE_LEVEL_PK PRIMARY KEY (RULE_LEVEL_ID)
);

CREATE TABLE rule_level_org
(
    RULE_LEVEL_ID NUMBER(11),
    NAME          NVARCHAR2(45) NOT NULL,
    DESCRIPTION   NVARCHAR2(50) NULL,
    CONSTRAINT RULE_LEVEL_ORG_PK PRIMARY KEY (RULE_LEVEL_ID)
);

CREATE TABLE rule_org
(
    RULE_ID             NUMBER(19),
    ACTIVE              NUMBER(1)       NULL,
    IS_SYSTEM           NUMBER(1)       NULL,
    NAME                NVARCHAR2(1024) NOT NULL,
    DESCRIPTION         NVARCHAR2(1024) NULL,
    RULE_LEVEL_ID       NUMBER(19)      NOT NULL,
    RULE_RECEIVER_ID1   NUMBER(19)      NULL,
    RULE_RECEIVER_ID2   NUMBER(19)      NULL,
    RULE_RECEIVER_ID3   NUMBER(19)      NULL,
    PATTERN             NVARCHAR2(1024) NULL,
    CLASS_NAMES         NVARCHAR2(1024) NULL,
    DISPLAY_CLASS_NAMES NVARCHAR2(1024) NULL,
    FIELD_NAMES         NVARCHAR2(1024) NULL,
    DISPLAY_FIELD_NAMES NVARCHAR2(1024) NULL,
    UPDATE_DATE         TIMESTAMP       NULL,
    REGISTRATION_DATE   TIMESTAMP       NULL,
    CONSTRAINT RULE_ORG_PK PRIMARY KEY (RULE_ID)
);

CREATE TABLE rule_receiver
(
    RULE_RECEIVER_ID  NUMBER(19),
    ACTIVE            NUMBER(1)       NULL,
    NAME              NVARCHAR2(20)   NOT NULL,
    UNIQUE_ID         NVARCHAR2(20)   NOT NULL,
    IS_EMAIL          NUMBER(1)       NULL,
    EMAIL             NVARCHAR2(1024) NULL,
    IS_URL            NUMBER(1)       NULL,
    SENDER_ID         NVARCHAR2(1024) NULL,
    SENDER_NAME       NVARCHAR2(1024) NULL,
    REGISTRATION_DATE TIMESTAMP       NULL,
    CONSTRAINT RULE_RECEIVER_PK PRIMARY KEY (RULE_RECEIVER_ID)
);

CREATE TABLE rule_target
(
    RULE_TARGET_ID     NUMBER(19),
    IS_SYSTEM          NUMBER(1)     NULL,
    CLASS_NAME         NVARCHAR2(50) NOT NULL,
    DISPLAY_CLASS_NAME NVARCHAR2(20) NULL,
    FIELDS             NVARCHAR2(50) NULL,
    DISPLAY_FIELDS     NVARCHAR2(20) NULL,
    FIELDS_TYPE        NVARCHAR2(20) NULL,
    REGISTRATION_DATE  TIMESTAMP     NULL,
    CONSTRAINT RULE_TARGET_PK PRIMARY KEY (RULE_TARGET_ID)
);

CREATE TABLE rule_target_org
(
    RULE_TARGET_ID     NUMBER(19),
    IS_SYSTEM          NUMBER(1)       NULL,
    CLASS_NAME         NVARCHAR2(50)   NOT NULL,
    DISPLAY_CLASS_NAME NVARCHAR2(50)   NULL,
    FIELDS             NVARCHAR2(2000) NULL,
    FIELDS_TYPE        NVARCHAR2(2000) NULL,
    DISPLAY_FIELDS     NVARCHAR2(2000) NULL,
    REGISTRATION_DATE  TIMESTAMP       NULL,
    CONSTRAINT RULE_TARGET_ORG_PK PRIMARY KEY (RULE_TARGET_ID)
);

CREATE TABLE site
(
    SITE_ID           NUMBER(19)     NOT NULL,
    NAME              NVARCHAR2(255) NULL,
    ADDRESS1          NVARCHAR2(255) NULL,
    ADDRESS2          NVARCHAR2(255) NULL,
    FAX               NVARCHAR2(255) NULL,
    TEL               NVARCHAR2(255) NULL,
    SIGN_KEY          NVARCHAR2(255) NULL,
    LICENSE_ID        NUMBER(19)     NULL,
    COUNT             NUMBER(11)     NULL,
    DELETE_DATE       TIMESTAMP      NULL,
    DUE_DATE          TIMESTAMP      NULL,
    UPDATE_DATE       TIMESTAMP      NULL,
    REGISTRATION_DATE TIMESTAMP      NULL,
    CONSTRAINT SITE_PK PRIMARY KEY (SITE_ID)
);

CREATE TABLE ts_dist
(
    ID                NUMBER(19)     NOT NULL,
    REPOSITORY_NAME   NVARCHAR2(128) NULL,
    DIST_NAME         NVARCHAR2(128) NULL,
    DIST_TYPE         NVARCHAR2(20)  NOT NULL,
    DIST_BUSINESS     NVARCHAR2(128) NULL,
    PATH_SOURCE       NVARCHAR2(256) NOT NULL,
    PATH_DESTINATION  NVARCHAR2(256) NOT NULL,
    INCLUDE_SUBDIR    NUMBER(1)      NOT NULL,
    LAST_DIST_VERSION TIMESTAMP      NULL,
    CREATE_DATE       TIMESTAMP      NOT NULL,
    CREATE_USER_ID    NVARCHAR2(30)  NULL,
    CREATE_USER_NAME  NVARCHAR2(45)  NULL,
    UPDATE_DATE       TIMESTAMP      NULL,
    UPDATE_USER_ID    NVARCHAR2(30)  NULL,
    UPDATE_USER_NAME  NVARCHAR2(45)  NULL,
    CONSTRAINT TS_DIST_PK PRIMARY KEY (ID)
);

CREATE UNIQUE INDEX DIST_NAME_UNIQUE ON TS_DIST (DIST_NAME);
CREATE INDEX TS_DIST_REPOSITORY_NAME_DIST_NAME_INDEX ON TS_DIST (REPOSITORY_NAME, DIST_NAME);


CREATE TABLE ts_dist_result
(
    ID                           NUMBER(19)     NOT NULL,
    DIST_ID                      NUMBER(19)     NULL,
    DIST_TYPE                    NVARCHAR2(20)  NOT NULL,
    REPOSITORY_NAME              NVARCHAR2(128) NULL,
    DIST_NAME                    NVARCHAR2(128) NULL,
    TASK_TYPE                    NVARCHAR2(16)  NULL,
    PATH_SOURCE                  NVARCHAR2(256) NOT NULL,
    PATH_DESTINATION             NVARCHAR2(256) NOT NULL,
    INCLUDE_SUBDIR               NUMBER(1)      NOT NULL,
    EXECUTE_SUCCESS_YN           NUMBER(1)      NULL,
    EXECUTE_START_DATE           TIMESTAMP      NULL,
    EXECUTE_END_DATE             TIMESTAMP      NULL,
    DIST_VERSION                 TIMESTAMP      NULL,
    DIST_RESULT_TOTAL_FILE_SIZE  NUMBER(19)     NULL,
    DIST_RESULT_TOTAL_FILE_COUNT NUMBER(11)     NULL,
    DIST_RESULT_DETAIL           CLOB           NULL,
    CREATE_DATE                  TIMESTAMP      NOT NULL,
    CREATE_USER_ID               NVARCHAR2(30)  NULL,
    CREATE_USER_NAME             NVARCHAR2(45)  NULL,
    UPDATE_DATE                  TIMESTAMP      NULL,
    UPDATE_USER_ID               NVARCHAR2(30)  NULL,
    UPDATE_USER_NAME             NVARCHAR2(45)  NULL,
    CONSTRAINT TS_DIST_RESULT_PK PRIMARY KEY (ID)
);

CREATE INDEX TS_DIST_RESULT_DIST_ID_ID_INDEX ON TS_DIST_RESULT (DIST_ID, ID);
CREATE INDEX TS_DIST_RESULT_REPOSITORY_NAME_DIST_ID_ID_INDEX ON TS_DIST_RESULT (REPOSITORY_NAME, DIST_ID, ID);
CREATE TABLE ts_dist_schedule
(
    ID                NUMBER(19)     NOT NULL,
    SCHEDULE          NVARCHAR2(64)  NULL,
    SCHEDULE_TYPE     NVARCHAR2(64)  NULL,
    SCHEDULE_NAME     NVARCHAR2(256) NULL,
    IS_ACTIVE         NUMBER(1)      NULL,
    LAST_EXECUTE_DATE TIMESTAMP      NULL,
    REPOSITORY_NAME   NVARCHAR2(128) NULL,
    CREATE_DATE       TIMESTAMP      NOT NULL,
    CREATE_USER_ID    NVARCHAR2(30)  NULL,
    CREATE_USER_NAME  NVARCHAR2(45)  NULL,
    UPDATE_DATE       TIMESTAMP      NULL,
    UPDATE_USER_ID    NVARCHAR2(30)  NULL,
    UPDATE_USER_NAME  NVARCHAR2(45)  NULL,
    CONSTRAINT TS_DIST_SCHEDULE_PK PRIMARY KEY (ID)
);
CREATE TABLE ts_dist_schedule_target
(
    ID               NUMBER(19)    NOT NULL,
    DIST_SCHEDULE_ID NUMBER(19)    NOT NULL,
    TARGET_DIST_ID   NUMBER(19)    NOT NULL,
    CREATE_DATE      TIMESTAMP     NOT NULL,
    CREATE_USER_ID   NVARCHAR2(30) NULL,
    CREATE_USER_NAME NVARCHAR2(45) NULL,
    UPDATE_DATE      TIMESTAMP     NULL,
    UPDATE_USER_ID   NVARCHAR2(30) NULL,
    UPDATE_USER_NAME NVARCHAR2(45) NULL,

    CONSTRAINT TS_DIST_SCHEDULE_TARGET_PK PRIMARY KEY (ID)
);

ALTER TABLE TS_DIST_SCHEDULE_TARGET
    ADD CONSTRAINT FK_TS_DIST_SCHEDULE_TARGET_TS_DIST_RESULT1 FOREIGN KEY (TARGET_DIST_ID) REFERENCES TS_DIST (ID);
ALTER TABLE TS_DIST_SCHEDULE_TARGET
    ADD CONSTRAINT FK_TS_DIST_SCHEDULE_TARGET_TS_DIST_SCHEDULE1 FOREIGN KEY (DIST_SCHEDULE_ID) REFERENCES TS_DIST_SCHEDULE (ID);


CREATE INDEX FK_TS_DIST_SCHEDULE_TARGET_TS_DIST_RESULT1_IDX ON TS_DIST_SCHEDULE_TARGET (TARGET_DIST_ID);
CREATE INDEX FK_TS_DIST_SCHEDULE_TARGET_TS_DIST_SCHEDULE1_IDX ON TS_DIST_SCHEDULE_TARGET (DIST_SCHEDULE_ID);

CREATE TABLE ts_dist_task
(
    ID                        NUMBER(19)      NOT NULL,
    REPOSITORY_NAME           NVARCHAR2(128)  NULL,
    BEFORE_CLEAN              NUMBER(1)       NULL,
    EXECUTED                  NUMBER(1)       NULL,
    EXECUTE_DATE              TIMESTAMP       NULL,
    TERMINAL_DIST_SCHEDULE_ID NUMBER(19)      NULL,
    TERMINAL_DIST_IDS         NVARCHAR2(1024) NULL,
    CREATE_DATE               TIMESTAMP       NOT NULL,
    CREATE_USER_ID            NVARCHAR2(30)   NULL,
    CREATE_USER_NAME          NVARCHAR2(45)   NULL,
    UPDATE_DATE               TIMESTAMP       NULL,
    UPDATE_USER_ID            NVARCHAR2(30)   NULL,
    UPDATE_USER_NAME          NVARCHAR2(45)   NULL,
    CONSTRAINT TS_DIST_TASK_PK PRIMARY KEY (ID)
);

CREATE INDEX TS_DIST_TASK_ID_EXECUTED_EXECUTE_DATE_INDEX ON TS_DIST_TASK (ID, EXECUTED, EXECUTE_DATE);
CREATE TABLE ts_help_reply
(
    ID               NUMBER(19)      NOT NULL,
    PARENT_ID        NUMBER(19)      NULL,
    SCREEN_ID        NVARCHAR2(128)  NULL,
    SCREEN_NAME      NVARCHAR2(256)  NULL,
    CONTENTS         NVARCHAR2(1024) NULL,
    INPROGRESS       NVARCHAR2(3)    NULL,
    CREATE_USER_NAME NVARCHAR2(45)   NULL,
    UPDATE_DATE      TIMESTAMP       NULL,
    UPDATE_USER_ID   NVARCHAR2(30)   NULL,
    UPDATE_USER_NAME NVARCHAR2(45)   NULL,
    CREATE_DATE      TIMESTAMP       NOT NULL,
    CREATE_USER_ID   NVARCHAR2(30)   NULL,


    CONSTRAINT TS_HELP_REPLY_PK PRIMARY KEY (ID)
);
ALTER TABLE TS_HELP_REPLY
    ADD CONSTRAINT TS_HELP_REPLY_TS_HELP_REPLY_ID_FK FOREIGN KEY (PARENT_ID) REFERENCES TS_HELP_REPLY (ID);

CREATE INDEX TS_HELP_REPLY_PARENT_ID_CREATE_DATE_INDEX ON TS_HELP_REPLY (PARENT_ID, CREATE_DATE);
CREATE TABLE ts_image
(
    ID               NUMBER(19)     NOT NULL,
    FILE_NAME        NVARCHAR2(256) NULL,
    FILE_MAP_ID      NUMBER(19)     NULL,
    CREATE_DATE      TIMESTAMP      NOT NULL,
    CREATE_USER_ID   NVARCHAR2(30)  NULL,
    CREATE_USER_NAME NVARCHAR2(45)  NULL,
    UPDATE_DATE      TIMESTAMP      NULL,
    UPDATE_USER_ID   NVARCHAR2(30)  NULL,
    UPDATE_USER_NAME NVARCHAR2(45)  NULL,
    CONSTRAINT TS_IMAGE_PK PRIMARY KEY (ID)
);

CREATE TABLE ts_menu
(
    ID               NVARCHAR2(32)  NOT NULL,
    PARENT_ID        NVARCHAR2(32)  NULL,
    ORD              NUMBER(11)     NULL,
    DEPTH            NUMBER(11)     NULL,
    MENU_NAME        NVARCHAR2(128) NULL,
    SCREEN_ID        NVARCHAR2(128) NULL,
    SCREEN_ID_PAST   NVARCHAR2(128) NULL,
    KEYWORD          NVARCHAR2(256) NULL,
    KEYWORD_PAST4    NVARCHAR2(256) NULL,
    CREATE_DATE      TIMESTAMP      NOT NULL,
    CREATE_USER_ID   NVARCHAR2(30)  NULL,
    CREATE_USER_NAME NVARCHAR2(45)  NULL,
    UPDATE_DATE      TIMESTAMP      NULL,
    UPDATE_USER_ID   NVARCHAR2(30)  NULL,
    UPDATE_USER_NAME NVARCHAR2(45)  NULL,
    CHARGE_EMP_PHONE NVARCHAR2(32)  NULL,
    CHARGE_EMP_NAME  NVARCHAR2(32)  NULL,
    CHARGE_DEPT_NAME NVARCHAR2(64)  NULL,
    MENU_TYPE        NVARCHAR2(32)  NULL,

    CONSTRAINT TS_MENU_PK PRIMARY KEY (ID)
);
ALTER TABLE TS_MENU
    ADD CONSTRAINT TS_MENU_TS_MENU_ID_FK FOREIGN KEY (PARENT_ID) REFERENCES TS_MENU (ID);

CREATE INDEX FK_TS_MENU_TS_MENU1_IDX ON TS_MENU (PARENT_ID);
CREATE INDEX TS_MENU_PARENT_ID_ORD_INDEX ON TS_MENU (PARENT_ID, ORD);

CREATE TABLE ts_meta_code
(
    ID               NUMBER(19)     NOT NULL,
    CODE_TYPE        NVARCHAR2(128) NULL,
    CODE_VALUE       NVARCHAR2(128) NULL,
    CODE_TYPE_NAME   NVARCHAR2(128) NULL,
    CODE_VALUE_NAME  NVARCHAR2(128) NULL,
    REMARKS          NVARCHAR2(256) NULL,
    ORD              NUMBER(11)     NULL,
    USE_YN           NUMBER(1)      NULL,
    CREATE_DATE      TIMESTAMP      NOT NULL,
    CREATE_USER_ID   NVARCHAR2(30)  NULL,
    CREATE_USER_NAME NVARCHAR2(45)  NULL,
    UPDATE_DATE      TIMESTAMP      NULL,
    UPDATE_USER_ID   NVARCHAR2(30)  NULL,
    UPDATE_USER_NAME NVARCHAR2(45)  NULL,
    CONSTRAINT TS_META_CODE_PK PRIMARY KEY (ID)
);

CREATE TABLE ts_notice
(
    ID               NUMBER(19)      NOT NULL,
    TITLE            NVARCHAR2(200)  NULL,
    CONTENTS         NVARCHAR2(2000) NULL,
    EXPOSE_TARGET    NVARCHAR2(20)   NULL,
    EXPOSE_ON        NUMBER(1)       NULL,
    CREATE_DATE      TIMESTAMP       NOT NULL,
    CREATE_USER_ID   NVARCHAR2(30)   NULL,
    CREATE_USER_NAME NVARCHAR2(45)   NULL,
    UPDATE_DATE      TIMESTAMP       NULL,
    UPDATE_USER_ID   NVARCHAR2(30)   NULL,
    UPDATE_USER_NAME NVARCHAR2(45)   NULL,
    CONSTRAINT TS_NOTICE_PK PRIMARY KEY (ID)
);

CREATE TABLE ts_personal_data
(
    USER_ID          NVARCHAR2(64)  NOT NULL,
    DATA_TYPE        NVARCHAR2(256) NOT NULL,
    DATA_ID          NUMBER(19)     NOT NULL,
    DATA_JSON        CLOB           NULL,
    CREATE_DATE      TIMESTAMP      NOT NULL,
    CREATE_USER_ID   NVARCHAR2(30)  NULL,
    CREATE_USER_NAME NVARCHAR2(45)  NULL,
    UPDATE_DATE      TIMESTAMP      NULL,
    UPDATE_USER_ID   NVARCHAR2(30)  NULL,
    UPDATE_USER_NAME NVARCHAR2(45)  NULL,
    CONSTRAINT TS_PERSONAL_DATA_PK PRIMARY KEY (USER_ID, DATA_TYPE, DATA_ID)
);

CREATE TABLE ts_preference
(
    DATA_KEY         NVARCHAR2(1024) NULL,
    DATA_VALUE       NVARCHAR2(1024) NULL,
    DATA_DESC        NVARCHAR2(1024) NULL,
    CREATE_DATE      TIMESTAMP       NOT NULL,
    CREATE_USER_ID   NVARCHAR2(30)   NULL,
    CREATE_USER_NAME NVARCHAR2(45)   NULL,
    UPDATE_DATE      TIMESTAMP       NULL,
    UPDATE_USER_ID   NVARCHAR2(30)   NULL,
    UPDATE_USER_NAME NVARCHAR2(45)   NULL,
    CONSTRAINT TS_PREFERENCE_PK PRIMARY KEY (DATA_KEY)
);

CREATE TABLE ts_statement
(
    ID                 NUMBER(19)     NOT NULL,
    SOURCE             NVARCHAR2(64)  NULL,
    STATEMENT_ID       NVARCHAR2(256) NULL,
    CONTENTS           CLOB           NULL,
    CONVERTED_ID       NVARCHAR2(256) NULL,
    CONVERTED_DESC     NVARCHAR2(128) NULL,
    CONVERTED_CONTENTS CLOB           NULL,
    USER_DATA1         CLOB           NULL,
    CREATE_DATE        TIMESTAMP      NOT NULL,
    CREATE_USER_ID     NVARCHAR2(30)  NULL,
    CREATE_USER_NAME   NVARCHAR2(45)  NULL,
    UPDATE_DATE        TIMESTAMP      NULL,
    UPDATE_USER_ID     NVARCHAR2(30)  NULL,
    UPDATE_USER_NAME   NVARCHAR2(45)  NULL,
    CONSTRAINT TS_STATEMENT_PK PRIMARY KEY (ID)
);

CREATE INDEX TS_STATEMENT_IDX1 ON TS_STATEMENT (CONVERTED_ID);



INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (1, 1, null, 1, '알림', null, '알림', null, '/images/contents/ico_mn05.png');
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (2, 1, 1, 2, '공지사항', '/terminal_support/notice_management.xml', '공지사항', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (7, 1, null, 1, '배포', null, '배포', null, '/images/contents/ico_mn02.png');
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (8, 1, 7, 2, '에이전트', null, '에이전트', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (9, 1, 8, 3, '현황', '/distribute/agent/current.xml', '현황', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (10, 1, 8, 3, '등록', '/distribute/agent/register.xml', '등록', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (11, 1, 7, 2, '단말', null, '단말', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (12, 1, 11, 3, '배포', '/distribute/terminal/distribution_mgmt.xml', '배포', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (13, 1, 11, 3, '내역', '/distribute/terminal/distribution_history.xml', '내역', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (15, 1, null, 1, '형상 관리', null, '형상 관리', null, '/images/contents/ico_mn05.png');
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (16, 1, 15, 2, '어플리케이션 관리', '/scm/repository.xml', '어플리케이션 관리', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (17, 1, 15, 2, '어플리케이션 변경내역', '/terminal_support/screen_management.xml', '어플리케이션 변경내역', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (18, 1, null, 1, '단말 관리', null, '단말 관리', null, '/images/contents/ico_mn02.png');
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (19, 1, 18, 2, '메뉴 관리', '/terminal_support/menu_management.xml', '메뉴 관리', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (20, 1, 18, 2, '코드관리', '/terminal_support/code_management.xml', '코드관리', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (21, 1, 18, 2, '도움말 관리', '/terminal_support/reply_management.xml', '도움말 관리', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (22, 1, 18, 2, '전문공유 내역', '/terminal_support/stmt_management.xml', '전문공유 내역', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (24, 1, null, 1, '사용자 관리', null, '사용자 관리', null, '/images/contents/ico_mn02.png');
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (25, 1, 24, 2, '사용자 관리', '/terminal_support/user_management.xml', '사용자 관리', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (26, 1, 24, 2, '조직 관리', '/terminal_support/dept_management.xml', '조직 관리', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (29, 1, null, 1, '설정', null, '설정', null, '/images/contents/ico_mn04.png');
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (30, 1, 29, 2, '계정 관리', '/setting/account.xml', '계정 관리', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (31, 1, 29, 2, '권한 관리', '/setting/power.xml', '권한 관리', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (32, 1, null, 1, '모니터링', null, '모니터링', null, '/images/contents/ico_mn04.png');
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (33, 1, 32, 2, '단말 현황', '/monitoring/deviceList.xml', '단말 현황', null, null);
INSERT INTO menu (MENU_ID, ACTIVE, PARENT_MENU_ID, LEVEL_, NAME, PATH, DESCRIPTION, REGISTRATION_DATE, ICON_IMAGE)
VALUES (34, 1, 32, 2, '시스템 현황', '/monitoring/serverList.xml', '시스템 현황', null, null);



INSERT INTO ts_preference (DATA_KEY, DATA_VALUE, DATA_DESC, CREATE_DATE, CREATE_USER_ID, CREATE_USER_NAME, UPDATE_DATE, UPDATE_USER_ID, UPDATE_USER_NAME)
VALUES ('mattermost.configLocation', '', 'mattermost config file 경로', '2021-12-20 16:00:00', 'system', 'system', null, null, null);
INSERT INTO ts_preference (DATA_KEY, DATA_VALUE, DATA_DESC, CREATE_DATE, CREATE_USER_ID, CREATE_USER_NAME, UPDATE_DATE, UPDATE_USER_ID, UPDATE_USER_NAME)
VALUES ('mattermost.maxFileKeepPeriod', '30', '최대파일보관기간(일) : 누적첨부파일 최대허용 기간 -> 지난파일 삭제 (-1 무제한, 기본값 30일)', '2021-12-20 16:00:00', 'system', 'system', null, null, null);
INSERT INTO ts_preference (DATA_KEY, DATA_VALUE, DATA_DESC, CREATE_DATE, CREATE_USER_ID, CREATE_USER_NAME, UPDATE_DATE, UPDATE_USER_ID, UPDATE_USER_NAME)
VALUES ('mattermost.maxFileKeepSize', '1073741824', '최대파일보관크기(MB) : 누적첨부파일 용량 최대허용크기 -> 초과 시 오래된파일 삭제    (-1 무제한, 기본값 1TB)', '2021-12-20 16:00:00', 'system', 'system', null, null, null);
INSERT INTO ts_preference (DATA_KEY, DATA_VALUE, DATA_DESC, CREATE_DATE, CREATE_USER_ID, CREATE_USER_NAME, UPDATE_DATE, UPDATE_USER_ID, UPDATE_USER_NAME)
VALUES ('mattermost.maxFileTransferSize', '10', '최대파일전송크기(MB) : 첨부파일 전송제한 크기 (-1 무제한, 기본값 10MB)', '2021-12-20 16:00:00', 'system', 'system', null, null, null);
INSERT INTO ts_preference (DATA_KEY, DATA_VALUE, DATA_DESC, CREATE_DATE, CREATE_USER_ID, CREATE_USER_NAME, UPDATE_DATE, UPDATE_USER_ID, UPDATE_USER_NAME)
VALUES ('mattermost.maxPostKeepPeriod', '365', '최대메세지보관기간(일) : 기간 지난메세지 삭제  (-1 무제한, 기본값 365일)', '2021-12-20 16:00:00', 'system', 'system', null, null, null);
INSERT INTO ts_preference (DATA_KEY, DATA_VALUE, DATA_DESC, CREATE_DATE, CREATE_USER_ID, CREATE_USER_NAME, UPDATE_DATE, UPDATE_USER_ID, UPDATE_USER_NAME)
VALUES ('distribute.terminal.KPIC.lastRevision', '269', null, '2021-12-20 16:00:00', null, null, null, null, null);
INSERT INTO ts_preference (DATA_KEY, DATA_VALUE, DATA_DESC, CREATE_DATE, CREATE_USER_ID, CREATE_USER_NAME, UPDATE_DATE, UPDATE_USER_ID, UPDATE_USER_NAME)
VALUES ('distribute.terminal.KPIC.distType', 'auto', null, '2021-12-28 11:20:50', 'unknown', 'unknown', '2021-12-28 13:14:21', 'unknown', 'unknown');
INSERT INTO ts_preference (DATA_KEY, DATA_VALUE, DATA_DESC, CREATE_DATE, CREATE_USER_ID, CREATE_USER_NAME, UPDATE_DATE, UPDATE_USER_ID, UPDATE_USER_NAME)
VALUES ('distribute.terminal.KPIC.pathDestination', 'static', null, '2021-12-28 11:20:50', 'unknown', 'unknown', '2021-12-28 13:14:21', 'unknown', 'unknown');
INSERT INTO ts_preference (DATA_KEY, DATA_VALUE, DATA_DESC, CREATE_DATE, CREATE_USER_ID, CREATE_USER_NAME, UPDATE_DATE, UPDATE_USER_ID, UPDATE_USER_NAME)
VALUES ('distribute.terminal.KPIC.pathSource', 'static', null, '2021-12-28 11:20:50', 'unknown', 'unknown', '2021-12-28 13:14:21', 'unknown', 'unknown');


-- -- ROLE 초기값
-- INSERT INTO ROLE (ROLE_ID, NAME, DESCRIPTION) VALUES (1, 'admin', null);
-- -- MENU기준으로 MENU_ROLE 생성하기
-- INSERT INTO MENU_ROLE (MENU_ROLE_ID, MENU_ID, ROLE_ID, ACTIVE, UPDATE_DATE, REGISTRATION_DATE)
-- SELECT ROWNUM, MENU_ID, 1, 1, NULL, SYSDATE
-- FROM MENU

CREATE TABLE common_code
(
    ID               NUMBER(19) NOT NULL
        CONSTRAINT COMMON_CODE_PK PRIMARY KEY,
    CODE_TYPE        NVARCHAR2(512),
    CODE_CAPTION     NVARCHAR2(1024),
    CODE_VALUE       NVARCHAR2(1024),
    ORD              NUMBER(11),
    USE_YN           NUMBER(1),
    CREATE_DATE      TIMESTAMP  NOT NULL,
    CREATE_USER_ID   NVARCHAR2(30),
    CREATE_USER_NAME NVARCHAR2(45),
    UPDATE_DATE      TIMESTAMP,
    UPDATE_USER_ID   NVARCHAR2(30),
    UPDATE_USER_NAME NVARCHAR2(45)
);

CREATE INDEX COMMON_CODE_IDX1 ON COMMON_CODE (CODE_TYPE, ORD, USE_YN);

CREATE TABLE em_device_info
(
    APP_ID           NVARCHAR2(50)  not null,
    DEVICE_ID        NVARCHAR2(100) not null,
    DEVICE_INFO_USER CLOB, -- infoUser 메세지에 담겨온 json
    CREATE_DATE      TIMESTAMP      NOT NULL,
    CREATE_USER_ID   NVARCHAR2(30),
    CREATE_USER_NAME NVARCHAR2(45),
    UPDATE_DATE      TIMESTAMP,
    UPDATE_USER_ID   NVARCHAR2(30),
    UPDATE_USER_NAME NVARCHAR2(45),
    CONSTRAINT EM_DEVICE_INFO_PK PRIMARY KEY (APP_ID, DEVICE_ID)
);

CREATE TABLE em_device_error
(
    ID               NUMBER(19)     NOT NULL,
    APP_ID           NVARCHAR2(50)  not null,
    DEVICE_ID        NVARCHAR2(100) not null,
    ERROR_TYPE       NVARCHAR2(100), -- 에러유형
    ERROR_DESC       CLOB,           -- 에러내용
    ERROR_TIME       TIMESTAMP,      -- 에러발생일시
    CREATE_DATE      TIMESTAMP      NOT NULL,
    CREATE_USER_ID   NVARCHAR2(30),
    CREATE_USER_NAME NVARCHAR2(45),
    UPDATE_DATE      TIMESTAMP,
    UPDATE_USER_ID   NVARCHAR2(30),
    UPDATE_USER_NAME NVARCHAR2(45),
    CONSTRAINT EM_DEVICE_ERROR_PK PRIMARY KEY (ID)
);

CREATE INDEX EM_DEVICE_ERROR_IDX1 ON em_device_error (APP_ID, DEVICE_ID, CREATE_DATE DESC);



create table em_collection
(
    ID                NVARCHAR2(100) not null,
    GATHERTHRESHOLDID NVARCHAR2(100) not null,
    SENDOPTIONID      NVARCHAR2(100) not null,
    COLLECTIONINFOID  NVARCHAR2(100) not null,
    CONSTRAINT EM_COLLECTION_PK PRIMARY KEY (ID)
);

create table em_collection_info
(
    ID           NVARCHAR2(100) not null,
    COLLECTIONID NVARCHAR2(100) not null,
    CONSTRAINT EM_COLLECTION_INFO_PK PRIMARY KEY (ID, COLLECTIONID)
);

create table em_collection_policy
(
    ID                       NVARCHAR2(100)  not null,
    GATHERTHRESTHOLDID       NVARCHAR2(100)  null,
    SENDOPTIONID             NVARCHAR2(100)  null,
    CONDITIONSID             NVARCHAR2(100)  null,
    EXTRATARGETDETECTSTATEID NVARCHAR2(100)  null,
    EXTRATARGETCONDITIONSID  NVARCHAR2(100)  null,
    URL                      NVARCHAR2(45)   null,
    INTERVALTYPE             NVARCHAR2(45)   null,
    "_INTERVAL"              NVARCHAR2(45)   null,
    COLUMNS                  NVARCHAR2(1024) null,
    PRIVATESECTORID          NVARCHAR2(100)  null,
    CONSTRAINT EM_COLLECTION_POLICY_PK PRIMARY KEY (ID)
);

create table em_dists
(
    APPID       NVARCHAR2(50)                 not null,
    VERSION     NVARCHAR2(50)                 not null,
    EXECUTOR    NVARCHAR2(30)                 not null,
    EXECUTEDATE TIMESTAMP     default sysdate not null,
    STATUS      NVARCHAR2(1)                  not null,
    DESCRIPTION NVARCHAR2(1000)               null,
    CREATEDATE  TIMESTAMP                     not null,
    UPDATEDATE  TIMESTAMP                     null,
    ADMISSION   NVARCHAR2(10) default 'PA'    null,
    CONSTRAINT EM_DISTS_PK PRIMARY KEY (APPID, VERSION)
);

create table em_dists_admission
(
    VERSION NVARCHAR2(50)  not null,
    ADMINID NVARCHAR2(255) not null,
    CONSTRAINT EM_DISTS_ADMISSION_PK PRIMARY KEY (VERSION, ADMINID)

);

create table em_execute_command
(
    APPID      NVARCHAR2(50)  not null,
    TARGET     NVARCHAR2(100) not null,
    ID         NVARCHAR2(50)  not null,
    COMMAND    NVARCHAR2(500) null,
    CREATEDATE TIMESTAMP      null,
    CONSTRAINT EM_EXECUTE_COMMAND_PK PRIMARY KEY (APPID, TARGET, ID)
);

create table em_notice
(
    CREATEDAT    TIMESTAMP default sysdate not null,
    CONTENT      CLOB                      null,
    SENDERID     NVARCHAR2(30)             null,
    RECEVIEDID   NVARCHAR2(30)             null,
    TITLE        NVARCHAR2(30)             null,
    RECEVIEDTYPE NVARCHAR2(10)             null,
    APPID        NVARCHAR2(50)             not null,
    CONSTRAINT EM_NOTICE_PK PRIMARY KEY (APPID, CREATEDAT)
);

create table em_notice_favorite_content
(
    APPID   NVARCHAR2(100) not null,
    ID      NVARCHAR2(30)  not null,
    CONTENT CLOB           not null,
    CONSTRAINT EM_NOTICE_FAVORITE_CONTENT_PK PRIMARY KEY (APPID, ID)
);

create table em_notice_group
(
    ID         NVARCHAR2(50) not null,
    RECEVIEDID NVARCHAR2(30) not null,
    CONSTRAINT EM_NOTICE_GROUP_PK PRIMARY KEY (ID, RECEVIEDID)
);

create table em_notice_link
(
    ID         NVARCHAR2(50)             not null,
    CREATEDAT  TIMESTAMP default sysdate not null,
    NAME       NVARCHAR2(30)             null,
    STARTINDEX NUMBER(11)                null,
    LENGTH     NUMBER(11)                null,
    DATA       NVARCHAR2(100)            null,
    CONSTRAINT EM_NOTICE_LINK_PK PRIMARY KEY (ID)
);

create table em_private_sector
(
    ID        NVARCHAR2(100) not null,
    PARAMETER CLOB           null,
    CONSTRAINT EM_PRIVATE_SECTOR_PK PRIMARY KEY (ID)
);

create table em_private_sector_group
(
    ID              NVARCHAR2(100) not null,
    PRIVATESECTORID NVARCHAR2(100) not null,
    CONSTRAINT EM_PRIVATE_SECTOR_GROUP_PK PRIMARY KEY (ID, PRIVATESECTORID)
);

create table em_users_login_status
(
    ID               NVARCHAR2(30) not null,
    IS_LOGIN         NUMBER(1)     not null,
    LAST_ACCESS_DATE TIMESTAMP     null,
    CONSTRAINT EM_USERS_LOGIN_STATUS_PK PRIMARY KEY (ID)
);


